power_rho_0 = allsimpower(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
power_rho_5 = allsimpower(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0.5, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
power_rho_7 = allsimpower(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0.7, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
allsimpower1 = rbind(power_rho_0,power_rho_5,power_rho_7)
write.csv(allsimpower1,"C:/Users/garre/OneDrive/Documents/UTHealth Files/Thesis/spbd1000simpower20_100_200_5000.csv")
n1 = 20
###### Testing SPBD with higher block size ######
block.size = 1000
n1 = 20
N1 =100
N = 200
p1 = .5
p2 = .5
nsim = 5000
block.size = 1000
n1 = 20
N1 =100
N = 200
p1 = .5
p2 = .5
nsim = 5000
ptm = proc.time()
error_rho_0 = allsimerror(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
error_rho_5 = allsimerror(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0.5, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
error_rho_7 = allsimerror(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0.7, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
proc.time() -ptm
allsimerror1 = rbind(error_rho_0,error_rho_5,error_rho_7)
write.csv(allsimerror1,"C:/Users/garre/OneDrive/Documents/UTHealth Files/Thesis/spbd1000simerror20_100_200_500055.csv")
proc.time() -ptm
power_rho_0 = allsimpower(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
power_rho_5 = allsimpower(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0.5, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
power_rho_7 = allsimpower(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0.7, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
allsimpower1 = rbind(power_rho_0,power_rho_5,power_rho_7)
write.csv(allsimpower1,"C:/Users/garre/OneDrive/Documents/UTHealth Files/Thesis/spbd1000simpower20_100_200_500055.csv")
n1 = 20
N1 =100
N = 200
p1 = .5
p2 = .4
nsim = 5000
ptm = proc.time()
error_rho_0 = allsimerror(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
error_rho_5 = allsimerror(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0.5, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
error_rho_7 = allsimerror(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0.7, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
proc.time() -ptm
allsimerror1 = rbind(error_rho_0,error_rho_5,error_rho_7)
write.csv(allsimerror1,"C:/Users/garre/OneDrive/Documents/UTHealth Files/Thesis/spbd1000simerror20_100_200_500054.csv")
proc.time() -ptm
power_rho_0 = allsimpower(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
power_rho_5 = allsimpower(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0.5, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
power_rho_7 = allsimpower(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0.7, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
allsimpower1 = rbind(power_rho_0,power_rho_5,power_rho_7)
write.csv(allsimpower1,"C:/Users/garre/OneDrive/Documents/UTHealth Files/Thesis/spbd1000simpower20_100_200_500054.csv")
n1 = 20
N1 =100
N = 200
p1 = .4
p2 = .4
nsim = 5000
ptm = proc.time()
error_rho_0 = allsimerror(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
error_rho_5 = allsimerror(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0.5, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
error_rho_7 = allsimerror(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0.7, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
proc.time() -ptm
allsimerror1 = rbind(error_rho_0,error_rho_5,error_rho_7)
write.csv(allsimerror1,"C:/Users/garre/OneDrive/Documents/UTHealth Files/Thesis/spbd1000simerror20_100_200_500044.csv")
proc.time() -ptm
power_rho_0 = allsimpower(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
power_rho_5 = allsimpower(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0.5, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
power_rho_7 = allsimpower(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0.7, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
allsimpower1 = rbind(power_rho_0,power_rho_5,power_rho_7)
write.csv(allsimpower1,"C:/Users/garre/OneDrive/Documents/UTHealth Files/Thesis/spbd1000simpower20_100_200_500044.csv")
allsimpower = function(n1 = 20, N1 = 100, N = 200, n.trt = 3, p1, p2, sigma0 = 1, sigma = 1, rho, nsim = 10000, tau1 = 1, tau2 = 1, save.boundary, block.size = 12) {
# pocockpower1 = simCarOrig(n1=n1, N1 = N1, N = N, n.trt = 3, mean.s = c(rep(0,3), 0.0000), mean.t = c(rep(0,3), 0.3333), p1 = p1, p2 = p2, sigma0 = 1, sigma = 1, rho = rho, nsim = nsim, tau1 = 1, tau2 = 1, save.boundary = save.boundary, design = "Pocock")
# pocockpower2 = simCarOrig(n1=n1, N1 = N1, N = N, n.trt = 3, mean.s = c(rep(0,3), 0.3333), mean.t = c(rep(0,3), 0.3333), p1 = p1, p2 = p2, sigma0 = 1, sigma = 1, rho = rho, nsim = nsim, tau1 = 1, tau2 = 1, save.boundary = save.boundary, design = "Pocock")
# pocockpower3 = simCarOrig(n1=n1, N1 = N1, N = N, n.trt = 3, mean.s = c(rep(0,3),-0.3333), mean.t = c(rep(0,3), 0.3333), p1 = p1, p2 = p2, sigma0 = 1, sigma = 1, rho = rho, nsim = nsim, tau1 = 1, tau2 = 1, save.boundary = save.boundary, design = "Pocock")
spbdpower1 =   simCarOrig(n1=n1, N1 = N1, N = N, n.trt = 3, mean.s = c(rep(0,3), 0.0000), mean.t = c(rep(0,3), 0.3333), p1 = p1, p2 = p2, sigma0 = 1, sigma = 1, rho = rho, nsim = nsim, tau1 = 1, tau2 = 1, save.boundary = save.boundary, design = "spbd",block.size = block.size)
spbdpower2 =   simCarOrig(n1=n1, N1 = N1, N = N, n.trt = 3, mean.s = c(rep(0,3), 0.3333), mean.t = c(rep(0,3), 0.3333), p1 = p1, p2 = p2, sigma0 = 1, sigma = 1, rho = rho, nsim = nsim, tau1 = 1, tau2 = 1, save.boundary = save.boundary, design = "spbd",block.size = block.size)
spbdpower3 =   simCarOrig(n1=n1, N1 = N1, N = N, n.trt = 3, mean.s = c(rep(0,3),-0.3333), mean.t = c(rep(0,3), 0.3333), p1 = p1, p2 = p2, sigma0 = 1, sigma = 1, rho = rho, nsim = nsim, tau1 = 1, tau2 = 1, save.boundary = save.boundary, design = "spbd",block.size = block.size)
nocarpower1 =simNoCarOrig(n1=n1, N1 = N1, N = N, n.trt = 3, mean.s = c(rep(0,3), 0.0000), mean.t = c(rep(0,3), 0.3333), p1 = p1, p2 = p2, sigma0 = 1, sigma = 1, rho = rho, nsim = nsim, tau1 = 1, tau2 = 1, save.boundary = save.boundary)
nocarpower2 =simNoCarOrig(n1=n1, N1 = N1, N = N, n.trt = 3, mean.s = c(rep(0,3), 0.3333), mean.t = c(rep(0,3), 0.3333), p1 = p1, p2 = p2, sigma0 = 1, sigma = 1, rho = rho, nsim = nsim, tau1 = 1, tau2 = 1, save.boundary = save.boundary)
nocarpower3 =simNoCarOrig(n1=n1, N1 = N1, N = N, n.trt = 3, mean.s = c(rep(0,3),-0.3333), mean.t = c(rep(0,3), 0.3333), p1 = p1, p2 = p2, sigma0 = 1, sigma = 1, rho = rho, nsim = nsim, tau1 = 1, tau2 = 1, save.boundary = save.boundary)
# pocockpower = cbind(pocockpower1,pocockpower2,pocockpower3)
spbdpower = cbind(spbdpower1,spbdpower2,spbdpower3)
nocarpower = cbind(nocarpower1,nocarpower2,nocarpower3)
allsim = rbind( spbdpower, nocarpower)
allsim = rbind(pocockpower, spbdpower, nocarpower)
return(allsim)
}
View(allsimerror1)
View(allsimerror1)
allsimerror = function(n1 = 20, N1 = 100, N = 200, n.trt = 3, p1, p2, sigma0 = 1, sigma = 1, rho, nsim = 10000, tau1 = 1, tau2 = 1, save.boundary, block.size = 12) {
# pocockerror1 = simCarOrig(n1=n1, N1 = N1, N = N, n.trt = 3, mean.s = c(rep(0,3), 0.0000), mean.t = c(rep(0,3), 0.0), p1 = p1, p2 = p2, sigma0 = 1, sigma = 1, rho = rho, nsim = nsim, tau1 = 1, tau2 = 1, save.boundary = save.boundary, design = "Pocock")
# pocockerror2 = simCarOrig(n1=n1, N1 = N1, N = N, n.trt = 3, mean.s = c(rep(0,3), 0.3333), mean.t = c(rep(0,3), 0.0), p1 = p1, p2 = p2, sigma0 = 1, sigma = 1, rho = rho, nsim = nsim, tau1 = 1, tau2 = 1, save.boundary = save.boundary, design = "Pocock")
# pocockerror3 = simCarOrig(n1=n1, N1 = N1, N = N, n.trt = 3, mean.s = c(rep(0,3),-0.3333), mean.t = c(rep(0,3), 0.0), p1 = p1, p2 = p2, sigma0 = 1, sigma = 1, rho = rho, nsim = nsim, tau1 = 1, tau2 = 1, save.boundary = save.boundary, design = "Pocock")
spbderror1 =   simCarOrig(n1=n1, N1 = N1, N = N, n.trt = 3, mean.s = c(rep(0,3), 0.0000), mean.t = c(rep(0,3), 0.0), p1 = p1, p2 = p2, sigma0 = 1, sigma = 1, rho = rho, nsim = nsim, tau1 = 1, tau2 = 1, save.boundary = save.boundary, design = "spbd",block.size = block.size)
spbderror2 =   simCarOrig(n1=n1, N1 = N1, N = N, n.trt = 3, mean.s = c(rep(0,3), 0.3333), mean.t = c(rep(0,3), 0.0), p1 = p1, p2 = p2, sigma0 = 1, sigma = 1, rho = rho, nsim = nsim, tau1 = 1, tau2 = 1, save.boundary = save.boundary, design = "spbd",block.size = block.size)
spbderror3 =   simCarOrig(n1=n1, N1 = N1, N = N, n.trt = 3, mean.s = c(rep(0,3),-0.3333), mean.t = c(rep(0,3), 0.0), p1 = p1, p2 = p2, sigma0 = 1, sigma = 1, rho = rho, nsim = nsim, tau1 = 1, tau2 = 1, save.boundary = save.boundary, design = "spbd",block.size = block.size)
nocarerror1 =simNoCarOrig(n1=n1, N1 = N1, N = N, n.trt = 3, mean.s = c(rep(0,3), 0.0000), mean.t = c(rep(0,3), 0.0), p1 = p1, p2 = p2, sigma0 = 1, sigma = 1, rho = rho, nsim = nsim, tau1 = 1, tau2 = 1, save.boundary = save.boundary)
nocarerror2 =simNoCarOrig(n1=n1, N1 = N1, N = N, n.trt = 3, mean.s = c(rep(0,3), 0.3333), mean.t = c(rep(0,3), 0.0), p1 = p1, p2 = p2, sigma0 = 1, sigma = 1, rho = rho, nsim = nsim, tau1 = 1, tau2 = 1, save.boundary = save.boundary)
nocarerror3 =simNoCarOrig(n1=n1, N1 = N1, N = N, n.trt = 3, mean.s = c(rep(0,3),-0.3333), mean.t = c(rep(0,3), 0.0), p1 = p1, p2 = p2, sigma0 = 1, sigma = 1, rho = rho, nsim = nsim, tau1 = 1, tau2 = 1, save.boundary = save.boundary)
# pocockerror = cbind(pocockerror1,pocockerror2,pocockerror3)
spbderror = cbind(spbderror1,spbderror2,spbderror3)
nocarerror = cbind(nocarerror1,nocarerror2,nocarerror3)
allsim = rbind(spbderror, nocarerror)
# allsim = rbind(pocockerror, spbderror, nocarerror)
return(allsim)
}
allsimpower = function(n1 = 20, N1 = 100, N = 200, n.trt = 3, p1, p2, sigma0 = 1, sigma = 1, rho, nsim = 10000, tau1 = 1, tau2 = 1, save.boundary, block.size = 12) {
# pocockpower1 = simCarOrig(n1=n1, N1 = N1, N = N, n.trt = 3, mean.s = c(rep(0,3), 0.0000), mean.t = c(rep(0,3), 0.3333), p1 = p1, p2 = p2, sigma0 = 1, sigma = 1, rho = rho, nsim = nsim, tau1 = 1, tau2 = 1, save.boundary = save.boundary, design = "Pocock")
# pocockpower2 = simCarOrig(n1=n1, N1 = N1, N = N, n.trt = 3, mean.s = c(rep(0,3), 0.3333), mean.t = c(rep(0,3), 0.3333), p1 = p1, p2 = p2, sigma0 = 1, sigma = 1, rho = rho, nsim = nsim, tau1 = 1, tau2 = 1, save.boundary = save.boundary, design = "Pocock")
# pocockpower3 = simCarOrig(n1=n1, N1 = N1, N = N, n.trt = 3, mean.s = c(rep(0,3),-0.3333), mean.t = c(rep(0,3), 0.3333), p1 = p1, p2 = p2, sigma0 = 1, sigma = 1, rho = rho, nsim = nsim, tau1 = 1, tau2 = 1, save.boundary = save.boundary, design = "Pocock")
spbdpower1 =   simCarOrig(n1=n1, N1 = N1, N = N, n.trt = 3, mean.s = c(rep(0,3), 0.0000), mean.t = c(rep(0,3), 0.3333), p1 = p1, p2 = p2, sigma0 = 1, sigma = 1, rho = rho, nsim = nsim, tau1 = 1, tau2 = 1, save.boundary = save.boundary, design = "spbd",block.size = block.size)
spbdpower2 =   simCarOrig(n1=n1, N1 = N1, N = N, n.trt = 3, mean.s = c(rep(0,3), 0.3333), mean.t = c(rep(0,3), 0.3333), p1 = p1, p2 = p2, sigma0 = 1, sigma = 1, rho = rho, nsim = nsim, tau1 = 1, tau2 = 1, save.boundary = save.boundary, design = "spbd",block.size = block.size)
spbdpower3 =   simCarOrig(n1=n1, N1 = N1, N = N, n.trt = 3, mean.s = c(rep(0,3),-0.3333), mean.t = c(rep(0,3), 0.3333), p1 = p1, p2 = p2, sigma0 = 1, sigma = 1, rho = rho, nsim = nsim, tau1 = 1, tau2 = 1, save.boundary = save.boundary, design = "spbd",block.size = block.size)
nocarpower1 =simNoCarOrig(n1=n1, N1 = N1, N = N, n.trt = 3, mean.s = c(rep(0,3), 0.0000), mean.t = c(rep(0,3), 0.3333), p1 = p1, p2 = p2, sigma0 = 1, sigma = 1, rho = rho, nsim = nsim, tau1 = 1, tau2 = 1, save.boundary = save.boundary)
nocarpower2 =simNoCarOrig(n1=n1, N1 = N1, N = N, n.trt = 3, mean.s = c(rep(0,3), 0.3333), mean.t = c(rep(0,3), 0.3333), p1 = p1, p2 = p2, sigma0 = 1, sigma = 1, rho = rho, nsim = nsim, tau1 = 1, tau2 = 1, save.boundary = save.boundary)
nocarpower3 =simNoCarOrig(n1=n1, N1 = N1, N = N, n.trt = 3, mean.s = c(rep(0,3),-0.3333), mean.t = c(rep(0,3), 0.3333), p1 = p1, p2 = p2, sigma0 = 1, sigma = 1, rho = rho, nsim = nsim, tau1 = 1, tau2 = 1, save.boundary = save.boundary)
# pocockpower = cbind(pocockpower1,pocockpower2,pocockpower3)
spbdpower = cbind(spbdpower1,spbdpower2,spbdpower3)
nocarpower = cbind(nocarpower1,nocarpower2,nocarpower3)
allsim = rbind( spbdpower, nocarpower)
# allsim = rbind(pocockpower, spbdpower, nocarpower)
return(allsim)
}
n1 = 20
N1 =100
N = 200
p1 = .5
p2 = .5
nsim = 5000
ptm = proc.time()
error_rho_0 = allsimerror(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
error_rho_5 = allsimerror(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0.5, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
error_rho_7 = allsimerror(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0.7, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
proc.time() -ptm
spbdblock1000error1 = rbind(error_rho_0,error_rho_5,error_rho_7)
write.csv(spbdblock1000error1,"C:/Users/garre/OneDrive/Documents/UTHealth Files/Thesis/spbd1000simerror20_100_200_500055.csv")
proc.time() -ptm
power_rho_0 = allsimpower(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
power_rho_5 = allsimpower(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0.5, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
power_rho_7 = allsimpower(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0.7, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
spbdblock1000power1 = rbind(power_rho_0,power_rho_5,power_rho_7)
write.csv(spbdblock1000power1,"C:/Users/garre/OneDrive/Documents/UTHealth Files/Thesis/spbd1000simpower20_100_200_500055.csv")
n1 = 20
N1 =100
N = 200
p1 = .5
p2 = .4
nsim = 5000
ptm = proc.time()
error_rho_0 = allsimerror(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
error_rho_5 = allsimerror(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0.5, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
error_rho_7 = allsimerror(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0.7, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
proc.time() -ptm
spbdblock1000error1 = rbind(error_rho_0,error_rho_5,error_rho_7)
write.csv(spbdblock1000error1,"C:/Users/garre/OneDrive/Documents/UTHealth Files/Thesis/spbd1000simerror20_100_200_500054.csv")
proc.time() -ptm
power_rho_0 = allsimpower(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
power_rho_5 = allsimpower(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0.5, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
power_rho_7 = allsimpower(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0.7, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
spbdblock1000power1 = rbind(power_rho_0,power_rho_5,power_rho_7)
write.csv(spbdblock1000power1,"C:/Users/garre/OneDrive/Documents/UTHealth Files/Thesis/spbd1000simpower20_100_200_500054.csv")
n1 = 20
N1 =100
N = 200
p1 = .4
p2 = .4
nsim = 5000
ptm = proc.time()
error_rho_0 = allsimerror(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
error_rho_5 = allsimerror(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0.5, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
error_rho_7 = allsimerror(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0.7, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
proc.time() -ptm
spbdblock1000error1 = rbind(error_rho_0,error_rho_5,error_rho_7)
write.csv(spbdblock1000error1,"C:/Users/garre/OneDrive/Documents/UTHealth Files/Thesis/spbd1000simerror20_100_200_500044.csv")
proc.time() -ptm
power_rho_0 = allsimpower(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
power_rho_5 = allsimpower(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0.5, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
power_rho_7 = allsimpower(n1 = n1, N1 = N1, N = N, n.trt = 3, p1 = p1, p2 = p2,sigma0 = 1, sigma= 1, rho = 0.7, nsim = nsim, tau1  = 1, tau2 = 1, save.boundary = save.boundary, block.size = block.size)
spbdblock1000power1 = rbind(power_rho_0,power_rho_5,power_rho_7)
write.csv(spbdblock1000power1,"C:/Users/garre/OneDrive/Documents/UTHealth Files/Thesis/spbd1000simpower20_100_200_500044.csv")
library(devtools)
document()
Norig =N
N1orig = N1
# set.seed(10101)
data = NULL
z.v = NULL
treat = NULL
covValues = NULL
n.looks = 2 #There are 2 planned analyses in this trial
alpha.star.u <<- c(0.0,0.025)
alpha.star.l <<- c(0.0,0.975)
if (is.null(mean.s)) mean.s = rep(0,n.trt+1)
if (is.null(mean.t)) mean.t = rep(0,n.trt+1)
selected=rep(0,nsim)
reject = rep(0,nsim)
trialprogress <<- c(1, 1)
N1 = N1orig
N = Norig
look = 1
covValues = genCovValues(p = c(p1,p2),N=N*(n.trt+1))
#Getting treatment value assignments
treat = norandom(covValues = covValues, best =  0 , tr = NULL, n.trt = n.trt)
Norig =N
N1orig = N1
# set.seed(10101)
data = NULL
z.v = NULL
treat = NULL
covValues = NULL
n.looks = 2 #There are 2 planned analyses in this trial
alpha.star.u <<- c(0.0,0.025)
alpha.star.l <<- c(0.0,0.975)
if (is.null(mean.s)) mean.s = rep(0,n.trt+1)
if (is.null(mean.t)) mean.t = rep(0,n.trt+1)
selected=rep(0,nsim)
reject = rep(0,nsim)
trialprogress <<- c(1, 1)
for (sim in seq(1,nsim))
{
N1 = N1orig
N = Norig
look = 1
covValues = genCovValues(p = c(p1,p2),N=N*(n.trt+1))
#Getting treatment value assignments
treat = norandom(covValues = covValues, best =  0 , tr = NULL, n.trt = n.trt)
#Simulating data for these treatment assignments
# set.seed(101)
data = simulatedata.nocar(mean.s = mean.s, mean.t = mean.t, sigma = sigma, sigma0 = sigma0, rho = rho, tau1 = tau1, tau2 = tau2, treat=treat, covValues=covValues,inspection = look,data = NULL)
z1.bs = rep(0,200)
v1.bs = rep(0,200)
z2.bs = rep(0,200)
v2.bs = rep(0,200)
for ( i in 1:200) {
bs.s1 = sample(nrow(data), nrow(data), replace = TRUE)
databs = data[bs.s1,]
#Calculating test statistics z & v for this data, and selecting the best treatment
z.v = get.z.v.simulate(databs,n.looks,look,z.v.prev=NULL, n1 = n1,N1= N1, N = N)
best = z.v[1,3] #The best treatment was found in this function
# selected[sim] = best
look = 2
z = z.v[1:look,1]
v = z.v[1:look,2]
z1.bs[i] = z[1]
v1.bs[i] = v[1]
z2.bs[i] = z[2]
v2.bs[i] = v[2]
}
z.v = get.z.v.simulate(data,n.looks,look,z.v.prev=NULL, n1 = n1,N1= N1, N = N)
best = z.v[1,3] #The best treatment was found in this function
selected[sim] = best
look = 2
z = z.v[1:look,1]
v = z.v[1:look,2]
z2 = z[look]/sqrt(var(z2.bs))
v2 = v[look]/sqrt(var(v2.bs))
v1 = v[1]/sqrt(var(v1.bs))
t1percent = min(99,round(100*v1/v2))
boundary.value = sqrt(v2)*save.boundary[t1percent]
if (z2 > boundary.value) reject[sim] = 1
}
Norig =N
N1orig = N1
# set.seed(10101)
data = NULL
z.v = NULL
treat = NULL
covValues = NULL
n.looks = 2 #There are 2 planned analyses in this trial
alpha.star.u <<- c(0.0,0.025)
alpha.star.l <<- c(0.0,0.975)
if (is.null(mean.s)) mean.s = rep(0,n.trt+1)
if (is.null(mean.t)) mean.t = rep(0,n.trt+1)
selected=rep(0,nsim)
reject = rep(0,nsim)
trialprogress <<- c(1, 1)
mean.s
mean.t
N1 = N1orig
N = Norig
look = 1
covValues = genCovValues(p = c(p1,p2),N=N*(n.trt+1))
#Getting treatment value assignments
treat = norandom(covValues = covValues, best =  0 , tr = NULL, n.trt = n.trt)
#Simulating data for these treatment assignments
# set.seed(101)
data = simulatedata.nocar(mean.s = mean.s, mean.t = mean.t, sigma = sigma, sigma0 = sigma0, rho = rho, tau1 = tau1, tau2 = tau2, treat=treat, covValues=covValues,inspection = look,data = NULL)
z1.bs = rep(0,200)
v1.bs = rep(0,200)
z2.bs = rep(0,200)
v2.bs = rep(0,200)
table(data$treat)
Norig =N
N1orig = N1
data = NULL
z.v = NULL
treat = NULL
covValues = NULL
n.looks = 2 #There are 2 planned analyses in this trial
alpha.star.u <<- c(0.0,0.025)
alpha.star.l <<- c(0.0,0.975)
if (is.null(mean.s)) mean.s = rep(0,n.trt+1)
if (is.null(mean.t)) mean.t = rep(0,n.trt+1)
selected=rep(0,nsim)
reject = rep(0,nsim)
trialprogress <<- c(1, 1)
N1 = N1orig
N = Norig
look = 1
covValues = genCovValues(p = c(p1,p2),N=N*(n.trt+1))
design
#Getting treatment value assignments
if (design == "Pocock" ) treat = psd(covValues, p1 = 3/4, best = 0, tr = NULL, n.trt = n.trt) else treat = spbd(covValues = covValues, m = 4, best=0, tr = NULL, n.trt = n.trt, block.size = block.size)
table(treat)
# treat = norandom(covValues = covValues, best =  0 , tr = NULL, n.trt = n.trt)
#Simulating data for these treatment assignments
# set.seed(101)
data = simulatedata.car(mean.s = mean.s, mean.t = mean.t, sigma = sigma, sigma0 = sigma0, rho = rho, tau1 = tau1, tau2 = tau2, treat=treat, covValues=covValues,inspection = look,data = NULL)
z1.bs = rep(0,200)
v1.bs = rep(0,200)
z2.bs = rep(0,200)
b1.bs = rep(0,200)
b2.bs = rep(0,200)
bs.s1 = sample(nrow(covValues), nrow(covValues), replace = TRUE)
covValuesbs = covValues[bs.s1,]
bs.s1
table(bs.s1)
covValuesbs = covValues[bs.s1,]
table(covValuesbs)
table(covValues)
p
p1
p2
1000/1600
table(covValues[,1])
p1
p1 = .5
p2 = 0.5
covValues = genCovValues(p = c(p1,p2),N=N*(n.trt+1))
#Getting treatment value assignments
if (design == "Pocock" ) treat = psd(covValues, p1 = 3/4, best = 0, tr = NULL, n.trt = n.trt) else treat = spbd(covValues = covValues, m = 4, best=0, tr = NULL, n.trt = n.trt, block.size = block.size)
table(covValues[,1])
#Getting treatment value assignments
if (design == "Pocock" ) treat = psd(covValues, p1 = 3/4, best = 0, tr = NULL, n.trt = n.trt) else treat = spbd(covValues = covValues, m = 4, best=0, tr = NULL, n.trt = n.trt, block.size = block.size)
# treat = norandom(covValues = covValues, best =  0 , tr = NULL, n.trt = n.trt)
#Simulating data for these treatment assignments
# set.seed(101)
data = simulatedata.car(mean.s = mean.s, mean.t = mean.t, sigma = sigma, sigma0 = sigma0, rho = rho, tau1 = tau1, tau2 = tau2, treat=treat, covValues=covValues,inspection = look,data = NULL)
z1.bs = rep(0,200)
v1.bs = rep(0,200)
z2.bs = rep(0,200)
b1.bs = rep(0,200)
b2.bs = rep(0,200)
bs.s1 = sample(nrow(covValues), nrow(covValues), replace = TRUE)
covValuesbs = covValues[bs.s1,]
table(covValues[,1])
table(covValuesbs[,1])
table(covValuesbs[,2])
if (design == "Pocock" ) treat = psd(covValuesbs, p1 = 3/4, best = 0, tr = NULL, n.trt = n.trt) else treat = spbd(covValues = covValuesbs, m = 4, best=0, tr = NULL, n.trt = n.trt, block.size = block.size)
table(treat)
if (design == "Pocock" ) treat = psd(covValuesbs, p1 = 3/4, best = 0, tr = NULL, n.trt = n.trt) else treat = spbd(covValues = covValuesbs, m = 4, best=0, tr = NULL, n.trt = n.trt, block.size = block.size)
table(treat)
if (design == "Pocock" ) treat = psd(covValuesbs, p1 = 3/4, best = 0, tr = NULL, n.trt = n.trt) else treat = spbd(covValues = covValuesbs, m = 4, best=0, tr = NULL, n.trt = n.trt, block.size = block.size)
table(treat)
if (design == "Pocock" ) treat = psd(covValuesbs, p1 = 3/4, best = 0, tr = NULL, n.trt = n.trt) else treat = spbd(covValues = covValuesbs, m = 4, best=0, tr = NULL, n.trt = n.trt, block.size = block.size)
table(treat)
mean.s
mean.t
sigma
sigma0
rho
tau1
tau2
#Calculating test statistics z & v for this data, and selecting the best treatment
databs = simulatedata.car(mean.s = mean.s, mean.t = mean.t, sigma = sigma, sigma0 = sigma0, rho = rho, tau1 = tau1, tau2 = tau2, treat=treat, covValues=covValuesbs,inspection = look,data = NULL)
b.s1 = get.z.v.bootstrap(databs,n.looks,look,z.v.prev=NULL, n1 = n1,N1= N1, N = N)
b.s1
for ( i in 1:200) {
bs.s1 = sample(nrow(covValues), nrow(covValues), replace = TRUE)
covValuesbs = covValues[bs.s1,]
if (design == "Pocock" ) treat = psd(covValuesbs, p1 = 3/4, best = 0, tr = NULL, n.trt = n.trt) else treat = spbd(covValues = covValuesbs, m = 4, best=0, tr = NULL, n.trt = n.trt, block.size = block.size)
#Calculating test statistics z & v for this data, and selecting the best treatment
databs = simulatedata.car(mean.s = mean.s, mean.t = mean.t, sigma = sigma, sigma0 = sigma0, rho = rho, tau1 = tau1, tau2 = tau2, treat=treat, covValues=covValuesbs,inspection = look,data = NULL)
b.s1 = get.z.v.bootstrap(databs,n.looks,look,z.v.prev=NULL, n1 = n1,N1= N1, N = N)
b1.bs[i] = b.s1[best,1,3]
b2.bs[i] = b.s1[best,2,3]
}
var(b1.bs)
var(b2.bs)
z.v = get.z.v.bootstrap(data,n.looks,look,z.v.prev=NULL, n1 = n1,N1= N1, N = N)
z.v
best
for ( i in 1:200) {
bs.s1 = sample(nrow(covValues), nrow(covValues), replace = TRUE)
covValuesbs = covValues[bs.s1,]
if (design == "Pocock" ) treat = psd(covValuesbs, p1 = 3/4, best = 0, tr = NULL, n.trt = n.trt) else treat = spbd(covValues = covValuesbs, m = 4, best=0, tr = NULL, n.trt = n.trt, block.size = block.size)
#Calculating test statistics z & v for this data, and selecting the best treatment
databs = simulatedata.car(mean.s = mean.s, mean.t = mean.t, sigma = sigma, sigma0 = sigma0, rho = rho, tau1 = tau1, tau2 = tau2, treat=treat, covValues=covValuesbs,inspection = look,data = NULL)
b.s1 = get.z.v.bootstrap(databs,n.looks,look,z.v.prev=NULL, n1 = n1,N1= N1, N = N)
b1.bs[i] = b.s1[best,1,3]
b2.bs[i] = b.s1[best,2,3]
}
for ( i in 1:200) {
bs.s1 = sample(nrow(covValues), nrow(covValues), replace = TRUE)
covValuesbs = covValues[bs.s1,]
if (design == "Pocock" ) treat = psd(covValuesbs, p1 = 3/4, best = 0, tr = NULL, n.trt = n.trt) else treat = spbd(covValues = covValuesbs, m = 4, best=0, tr = NULL, n.trt = n.trt, block.size = block.size)
#Calculating test statistics z & v for this data, and selecting the best treatment
databs = simulatedata.car(mean.s = mean.s, mean.t = mean.t, sigma = sigma, sigma0 = sigma0, rho = rho, tau1 = tau1, tau2 = tau2, treat=treat, covValues=covValuesbs,inspection = look,data = NULL)
b.s1 = get.z.v.bootstrap(databs,n.looks,look,z.v.prev=NULL, n1 = n1,N1= N1, N = N)
print(best)
b1.bs[i] = b.s1[best,1,3]
b2.bs[i] = b.s1[best,2,3]
}
b.s1
z.v = get.z.v.bootstrap(data,n.looks,look,z.v.prev=NULL, n1 = n1,N1= N1, N = N)
z.v
best
selected[sim] = best
sim
v1bootstrap = 1/var(b1.bs)
v2bootstrap = 1/var(b2.bs)
v1bootstrap = 1/var(b1.bs)
v2bootstrap = 1/var(b2.bs)
look = 2
Bhat = z.v[best,look,3]
Bhat
z2 = Bhat/var(b1.bs)
z2
v1bootstrap
v2bootstrap
t1percent = min(99,round(100*v1/v2))
t1percent = min(99,round(100*v1bootstrap/v2bootstrap))
z.v
nsim = 100
document()
nsim = 100
for ( i in 1:200) {
bs.s1 = sample(nrow(covValues), nrow(covValues), replace = TRUE)
covValuesbs = covValues[bs.s1,]
if (design == "Pocock" ) treat = psd(covValuesbs, p1 = 3/4, best = 0, tr = NULL, n.trt = n.trt) else treat = spbd(covValues = covValuesbs, m = 4, best=0, tr = NULL, n.trt = n.trt, block.size = block.size)
#Calculating test statistics z & v for this data, and selecting the best treatment
databs = simulatedata.car(mean.s = mean.s, mean.t = mean.t, sigma = sigma, sigma0 = sigma0, rho = rho, tau1 = tau1, tau2 = tau2, treat=treat, covValues=covValuesbs,inspection = look,data = NULL)
b.s1 = get.z.v.bootstrap(databs,n.looks,look,z.v.prev=NULL, n1 = n1,N1= N1, N = N)
b1.bs[i] = b.s1[best,1,3]
b2.bs[i] = b.s1[best,2,3]
}
z.v = get.z.v.bootstrap(data,n.looks,look,z.v.prev=NULL, n1 = n1,N1= N1, N = N)
best = best #The best treatment was found in this function
selected[sim] = best
look = 2
Bhat = z.v[best,look,3]
# Test 1: Using the bootstrap variance for Z2, V1, and V2
v1bootstrap = 1/var(b1.bs)
v2bootstrap = 1/var(b2.bs)
z2bootstrap = Bhat/var(b2.bs)
t1percent = min(99,round(100*v1bootstrap/v2bootstrap))
boundary.value = sqrt(v2bootstrap)*save.boundary[t1percent]
if (z2bootstrap > boundary.value) rejectTest1[sim] = 1
# Test 2: Using the bootstrap variance for Z2 only
v2 = z.v[best, 2, 2]
v1 = z.v[best, 1, 2]
z2bootstrap = Bhat/var(b2.bs)
t1percent = min(99,round(100*v1/v2))
boundary.value = sqrt(v2)*save.boundary[t1percent]
if (z2bootstrap > boundary.value) rejectTest2[sim] = 1
# Test 3: Using the bootstrap variance for Z2 and V2
v2bootstrap = 1/var(b2.bs)
v1 = z.v[best, 1, 2]
z2bootstrap = Bhat/var(b2.bs)
t1percent = min(99,round(100*v1/v2bootstrap))
boundary.value = sqrt(v2bootstrap)*save.boundary[t1percent]
if (z2bootstrap > boundary.value) rejectTest3[sim] = 1
sim
Norig =N
N1orig = N1
data = NULL
z.v = NULL
treat = NULL
covValues = NULL
n.looks = 2 #There are 2 planned analyses in this trial
alpha.star.u <<- c(0.0,0.025)
alpha.star.l <<- c(0.0,0.975)
if (is.null(mean.s)) mean.s = rep(0,n.trt+1)
if (is.null(mean.t)) mean.t = rep(0,n.trt+1)
selected =rep(0,nsim)
rejectTest1 = rep(0,nsim)
rejectTest2 = rep(0,nsim)
rejectTest3 = rep(0,nsim)
##### Testing Bootstrap
n1 = 20
N1 =100
N = 200
p1 = .5
p2 = .5
nsim = 100
n.trt = 3
rho = 0.5
nsim = 100
document()
spbderror1bs =   simCarOrigBS(n1=n1, N1 = N1, N = N, n.trt = 3, mean.s = c(rep(0,3), 0.0000), mean.t = c(rep(0,3), 0.0), p1 = p1, p2 = p2, sigma0 = 1, sigma = 1, rho = rho, nsim = nsim, tau1 = 1, tau2 = 1, save.boundary = save.boundary, design = "spbd", block.size = 20)
spbderror2bs =   simCarOrigBS(n1=n1, N1 = N1, N = N, n.trt = 3, mean.s = c(rep(0,3),-0.3333), mean.t = c(rep(0,3), 0.0), p1 = p1, p2 = p2, sigma0 = 1, sigma = 1, rho = rho, nsim = nsim, tau1 = 1, tau2 = 1, save.boundary = save.boundary, design = "spbd", block.size = 20)
spbderror3bs =   simCarOrigBS(n1=n1, N1 = N1, N = N, n.trt = 3, mean.s = c(rep(0,3),0.3333), mean.t = c(rep(0,3), 0.0), p1 = p1, p2 = p2, sigma0 = 1, sigma = 1, rho = rho, nsim = nsim, tau1 = 1, tau2 = 1, save.boundary = save.boundary, design = "spbd", block.size = 20)
#Running multiple simulations:
save.boundary = save.boundary.values()
spbderror1bs =   simCarOrigBS(n1=n1, N1 = N1, N = N, n.trt = 3, mean.s = c(rep(0,3), 0.0000), mean.t = c(rep(0,3), 0.0), p1 = p1, p2 = p2, sigma0 = 1, sigma = 1, rho = rho, nsim = nsim, tau1 = 1, tau2 = 1, save.boundary = save.boundary, design = "spbd", block.size = 20)
spbderror2bs =   simCarOrigBS(n1=n1, N1 = N1, N = N, n.trt = 3, mean.s = c(rep(0,3),-0.3333), mean.t = c(rep(0,3), 0.0), p1 = p1, p2 = p2, sigma0 = 1, sigma = 1, rho = rho, nsim = nsim, tau1 = 1, tau2 = 1, save.boundary = save.boundary, design = "spbd", block.size = 20)
spbderror3bs =   simCarOrigBS(n1=n1, N1 = N1, N = N, n.trt = 3, mean.s = c(rep(0,3),0.3333), mean.t = c(rep(0,3), 0.0), p1 = p1, p2 = p2, sigma0 = 1, sigma = 1, rho = rho, nsim = nsim, tau1 = 1, tau2 = 1, save.boundary = save.boundary, design = "spbd", block.size = 20)
View(spbderror1bs)
View(spbderror2bs)
View(spbderror1bs)
